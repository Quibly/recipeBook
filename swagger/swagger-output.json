{
  "swagger": "2.0",
  "info": {
    "title": "Recipe Book API",
    "description": "This is an API Built to keep track of user recipes and user data<br><br>You need to log in before you can receive request data.<br><br><a href='https://dry-river-36052.herokuapp.com/'>Login User</a><br><br><a href='https://dry-river-36052.herokuapp.com/auth/logout'>Logout User</a>",
    "version": "1.0.0"
  },
  "host": "dry-river-36052.herokuapp.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/users/": {
      "get": {
        "tags": [ "Users" ],
        "summary": "Get all the Users",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized, { Response: 'The request is not authorized because the user is not authenticated.', Solution: 'Please login at https://dry-river-36052.herokuapp.com/ ' }"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [ "Users" ],
        "summary": "Create a new User",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Add a new user using request body",
            "schema": {
              "type": "object",
              "properties": {
                "fName": {
                  "type": "string",
                  "example": "Jon"
                },
                "lName": {
                  "type": "string",
                  "example": "Doe"
                },
                "email": {
                  "type": "string",
                  "example": "test@email.com"
                },
                "userName": {
                  "type": "string",
                  "example": "NewChef"
                },
                "password": {
                  "type": "string",
                  "example": "P@ssword1"
                }
              },
              "required": [
                "fName",
                "lName",
                "email",
                "userName",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request, Username already exists"
          },
          "401": {
            "description": "Unauthorized, { Response: 'The request is not authorized because the user is not authenticated.', Solution: 'Please login at https://dry-river-36052.herokuapp.com/ ' }"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/{username}": {
      "get": {
        "tags": [ "Users" ],
        "summary": "Get a specific User",
        "description": "",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "description": "Get a specific user with the username",
            "example": "SuperChef",
            "value": "SuperChef"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request, Username is required as Alpha in path"
          },
          "401": {
            "description": "Unauthorized, { Response: 'The request is not authorized because the user is not authenticated.', Solution: 'Please login at https://dry-river-36052.herokuapp.com/ ' }"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [ "Users" ],
        "summary": "Update a User",
        "description": "",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "description": "Get a specific user with the username and change contents with request body",
            "example": "SuperChef",
            "value": "SuperChef"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Update a user using request body",
            "schema": {
              "type": "object",
              "properties": {
                "fName": {
                  "type": "string",
                  "example": "Jon"
                },
                "lName": {
                  "type": "string",
                  "example": "Doe"
                },
                "email": {
                  "type": "string",
                  "example": "test@email.com"
                },
                "userName": {
                  "type": "string",
                  "example": "SuperChef"
                },
                "password": {
                  "type": "string",
                  "example": "P@ssword1"
                }
              },
              "required": [
                "fName",
                "lName",
                "email",
                "userName",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request, Username is required as Alpha in path"
          },
          "401": {
            "description": "Unauthorized, { Response: 'The request is not authorized because the user is not authenticated.', Solution: 'Please login at https://dry-river-36052.herokuapp.com/ ' }"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [ "Users" ],
        "summary": "Delete a User",
        "description": "",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "description": "Get a specific user by username and delete it from the database.",
            "example": "SuperChef",
            "value": "SuperChef"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request, Username is required as Alpha in path"
          },
          "401": {
            "description": "Unauthorized, { Response: 'The request is not authorized because the user is not authenticated.', Solution: 'Please login at https://dry-river-36052.herokuapp.com/ ' }"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/recipes/": {
      "get": {
        "tags": [ "Recipes" ],
        "summary": "Get all the Recipes",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized, { Response: 'The request is not authorized because the user is not authenticated.', Solution: 'Please login at https://dry-river-36052.herokuapp.com/ ' }"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [ "Recipes" ],
        "summary": "Add a new Recipe",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Add a new recipe using request body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Grilled Cheese"
                },
                "description": {
                  "type": "string",
                  "example": "Grilled sandwiches are awesome"
                },
                "imageURL": {
                  "type": "string",
                  "example": "image.png"
                },
                "ingredients": {
                  "type": "array",
                  "example": [
                    "bread",
                    "cheese",
                    "butter"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "steps": {
                  "type": "string",
                  "example": "How to make a grilled cheese"
                },
                "categories": {
                  "type": "array",
                  "example": [
                    "lunch",
                    "dinner"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "methods": {
                  "type": "array",
                  "example": [
                    "grill",
                    "oven",
                    "pan"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "name",
                "description",
                "imageURL",
                "ingredients",
                "steps",
                "categories",
                "methods"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request, Recipe already exists"
          },
          "401": {
            "description": "Unauthorized, { Response: 'The request is not authorized because the user is not authenticated.', Solution: 'Please login at https://dry-river-36052.herokuapp.com/ ' }"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}